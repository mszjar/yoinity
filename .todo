si jamais, pour changer la maniere d'appeler un audio. <!-- <source src="<%= remix.audio.service_url %>" type="<%= remix.audio.blob.content_type %>"> -->

chatgpt start prompt:

in my rails 7 app, using stimulus, i have posts, with remixes, like this:
require 'securerandom'

class Post < ApplicationRecord
  before_create :generate_token

  has_one_attached :photo
  belongs_to :user
  has_many :comments, dependent: :destroy
  has_many :post_likes, dependent: :destroy
  has_many :post_qualities, dependent: :destroy
  has_many :saved_for_laters, dependent: :destroy
  has_many :users_who_saved, through: :saved_for_laters, source: :user
  has_and_belongs_to_many :categories, limit: 6
  has_many :remixes, dependent: :nullify

  validates :title, :content, presence: true
  validates :title, length: { maximum: 120 }
  validates :content, length: { maximum: 8999 }


  include PgSearch::Model
  pg_search_scope :search, against: [ :title, :content, :language ],
    associated_against: { categories: [ :name ] },
    using: {
      tsearch: { prefix: true }
    }

  def speech_duration
    content.split.size / 150.0 # 150 words per minute
  end

  private

  def generate_token
    self.token = SecureRandom.urlsafe_base64(15) # secured roots for posts
  end

end

and i have the remix model, like this:
class Remix < ApplicationRecord
  belongs_to :user
  belongs_to :post, optional: true
  has_one :origin_post, class_name: "Post", foreign_key: "remix_id", dependent: :nullify

  has_one_attached :audio

  validate :remixes_limit, on: :create

  private

  def remixes_limit
    if self.post && self.post.remixes.count >= 3
      errors.add(:base, 'A post can have 3 remixes maximum')
    end
  end
end
